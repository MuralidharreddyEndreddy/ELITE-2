//Grading Students

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'gradingStudents' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY grades as parameter.
     */

    public static List<Integer> gradingStudents(List<Integer> grades) {
        List<Integer>result = new ArrayList<Integer>();
        for (Integer val:grades){
            if (val%5<=2){
                result.add(val);
            }
            else if (val < 38){
                result.add(val);
            }
            else{
                result.add(val+(5-(val%5)));
            }
        }
        System.out.println(result);
        return result;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int gradesCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> grades = new ArrayList<>();

        for (int i = 0; i < gradesCount; i++) {
            int gradesItem = Integer.parseInt(bufferedReader.readLine().trim());
            grades.add(gradesItem);
        }

        List<Integer> result = Result.gradingStudents(grades);

        for (int i = 0; i < result.size(); i++) {
            bufferedWriter.write(String.valueOf(result.get(i)));

            if (i != result.size() - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}



//Remove duplicates 12

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String str=in.next();
        LinkedHashSet<Character>set=new LinkedHashSet<>();
        for (int i=0; i<str.length();i++){
            char c = str.charAt(i);
            if (!set.contains(c)){
                set.add(c);
            }
        }       
        for (char c : set){
            System.out.print(c);
        }            
    }        
}


//Java Hashset

        String bc = "";
        LinkedHashSet<String>str = new LinkedHashSet<>();    
    for (int i=0; i<t; i++){
        bc=pair_left[i]+" "+pair_right[i];
        str.add(bc);
        System.out.println(str.size());
        
    }
    
    
    //Remove charceters
    
    import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        String a="";
        String b="";
        String g="";
        String text = in.nextLine();
        for(int i=0; i<text.length();i++){
            if(text.charAt(i)==' '){
                a=text.substring(0,i);
                b=text.substring(i+1);
            }
        }
        for(int i=0; i<a.length();i++){
            if (!(b.contains(a.substring(i,i+1)))){
                g=g+a.substring(i,i+1);
            }
            else{
                b=b.replaceFirst(a.substring(i,i+1),"");
            }
        }
        System.out.println(g);
    }
}
